
name: GitHub Actions Build and Deploy
on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"
      # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master  

    - name: Build
      run: |
        sudo apt update
        sudo apt install mingw-w64 -y
        sudo apt install clang -y
        ./build_windows.sh main_win.cpp -o apk_installer_Win64.exe -DNDEBUG
        g++ ./main.cpp -Wall -O3 -DNDEBUG -o ./apk_installer_Linux
        tar -czvf apk_installer_Win64.tgz apk_installer_Win64.exe
        tar -czvf apk_installer_Linux.tgz apk_installer_Linux
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
          name: apk_installer_Win64.exe
          path: ./apk_installer_Win64.exe
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
          name: apk_installer_Linux
          path: ./apk_installer_Linux
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
            RELEASE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ./apk_installer_Win64.tgz
            asset_name: apk_installer_Win64.tgz
            asset_content_type: application/zip  
    - name: Upload Release Asset
      id: upload-release-asset-2 
      uses: actions/upload-release-asset@v1
      env:
                  GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
                  asset_path: ./apk_installer_Linux.tgz
                  asset_name: apk_installer_Linux.tgz
                  asset_content_type: application/zip  
